FROM multiarch/qemu-user-static:x86_64-aarch64 as qemu
FROM nixos/nix

# Copy the qemu binary
COPY --from=qemu /usr/bin/qemu-aarch64-static /usr/bin

WORKDIR /workdir

# Add result Generated by nix build
ENV PATH="/result/bin:$PATH"

# Enable extra experimental features for Nix
RUN echo 'extra-experimental-features = nix-command' >> /etc/nix/nix.conf
RUN echo 'extra-experimental-features = flakes' >> /etc/nix/nix.conf

# Configure Nix and install packages
RUN \
    set -e; \
    echo 'extra-platforms = aarch64-linux' >> /etc/nix/nix.conf; \
    nix-env -f https://github.com/nix-community/nixos-generators/archive/master.tar.gz -i;

# # This should be in a flake
# RUN nix-env -i vim fish

# Update the Nix channel
RUN nix-channel --update

COPY flake.nix .
COPY flake.lock .

RUN nix \
    --option filter-syscalls false \
    --show-trace \
    build

RUN mv result /result

COPY . .

ENTRYPOINT ["python" ]

CMD ["entrypoint.py"]