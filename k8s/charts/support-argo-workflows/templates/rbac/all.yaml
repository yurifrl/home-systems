# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: argo-workflows-all
#   namespace: {{ .Release.Namespace }}
#   annotations:
#     workflows.argoproj.io/rbac-rule: "true"
#     workflows.argoproj.io/rbac-rule-precedence: "0"
#     eks.amazonaws.com/role-arn: arn:aws:iam::492684252576:role/argo-workflows-all
# ---
# apiVersion: v1
# kind: Secret
# type: kubernetes.io/service-account-token
# metadata:
#   name: argo-workflows-all.service-account-token
#   annotations:
#     kubernetes.io/service-account.name: argo-workflows-all
# ---
# # https://github.com/argoproj/argo-workflows/blob/main/docs/security.md
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRole
# metadata:
#   name: argo-workflows-all
# rules:
#   # k8s standard APIs
#   - apiGroups:
#       - ""
#     resources:
#       - events
#       - pods
#       - pods/log
#     verbs:
#       - get
#       - list
#       - watch
#       - patch
#   # Argo APIs. See also https://github.com/argoproj/argo-workflows/blob/main/manifests/cluster-install/workflow-controller-rbac/workflow-aggregate-roles.yaml#L4
#   - apiGroups:
#       - argoproj.io
#     resources:
#       - eventsources
#       - sensors
#       - workflows
#       - workfloweventbindings
#       - workflowtemplates
#       - clusterworkflowtemplates
#       - cronworkflows
#       - cronworkflows
#       - workflowtaskresults
#     verbs:
#       - get
#       - list
#       - watch
#       - create
#       - patch
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: argo-workflows-all-binding
# subjects:
# - kind: ServiceAccount
#   name: argo-workflows-all
#   namespace: {{ .Release.Namespace }}
# roleRef:
#   kind: ClusterRole
#   name: argo-workflows-all
#   apiGroup: rbac.authorization.k8s.io
