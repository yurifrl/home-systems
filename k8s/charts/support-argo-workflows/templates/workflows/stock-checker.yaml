{{- if .Values.stockChecker.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Release.Name }}-stock-checker
  namespace: {{ .Release.Namespace }}
spec:
  entrypoint: check-stock
  arguments:
    parameters:
      - name: products
        value: |
          {{- .Values.stockChecker.products | toJson | nindent 10 }}
  templates:
    - name: check-stock
      inputs:
        parameters:
          - name: products
      container:
        image: curlimages/curl:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            #!/bin/sh
            set -e

            # Install jq
            apk add --no-cache jq

            USER_AGENT="Mozilla/5.0"

            # Function to send Discord notification
            notify_discord() {
              local message="$1"
              curl -X POST \
                -H "Content-Type: application/json" \
                -d "{\"content\":\"$message\"}" \
                "$DISCORD_WEBHOOK" || echo "Failed to send Discord notification"
            }

            # Function to check product stock
            check_product() {
              local name="$1"
              local url="$2"
              local out_of_stock_text="$3"

              echo "Checking stock for $name..."
              if ! curl -sA "$USER_AGENT" "$url" | grep -q "$out_of_stock_text"; then
                echo "Product $name is in stock! Sending notification..."
                notify_discord "ðŸš¨ $name is in stock! Check $url"
              else
                echo "Product $name is out of stock"
              fi
            }

            # Parse products JSON and check each one
            echo '{{`{{inputs.parameters.products}}`}}' | jq -c '.[]' | while read -r product; do
              if [ -n "$product" ]; then
                name=$(echo "$product" | jq -r '.name // empty')
                url=$(echo "$product" | jq -r '.url // empty')
                out_of_stock_text=$(echo "$product" | jq -r '.outOfStockText // empty')
                
                if [ -n "$name" ] && [ -n "$url" ] && [ -n "$out_of_stock_text" ]; then
                  check_product "$name" "$url" "$out_of_stock_text"
                fi
              fi
            done
        env:
          - name: DISCORD_WEBHOOK
            valueFrom:
              secretKeyRef:
                name: argo-workflows-stock-checker
                key: DISCORD_WEBHOOK_URL

---
apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: {{ .Release.Name }}-stock-checker-cron
  namespace: {{ .Release.Namespace }}
spec:
  schedule: {{ .Values.stockChecker.schedule | default "*/15 * * * *" | quote }}
  concurrencyPolicy: Replace
  workflowSpec:
    workflowTemplateRef:
      name: {{ .Release.Name }}-stock-checker
    arguments:
      parameters:
        - name: products
          value: |
            {{- .Values.stockChecker.products | toJson | nindent 12 }}
{{- end }} 