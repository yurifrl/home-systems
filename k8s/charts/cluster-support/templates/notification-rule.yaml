apiVersion: check.cloudders.com/v1alpha1
kind: NotificationRule
metadata:
  name: default
  namespace: cloudders
spec:
  ## Check CRD support multiple or single checks
  ##
  ## You can use one check like in the example
  ## or multiple like this:
  ##
  ## checks:
  ## - "check1"
  ## - "check2"
  checks:
    - "argocd"
  slack:
    ## Slack webhook secret to be used
    ## Or you can use Kubernetes secrets as well
    webhook:
      secret:
        - name: discord
          key: webhook-url
    username: "cloudders"
    channel: "#general"
    ## Message can support multiple text formats
    ## Normal text without any variables and such with variables, emojies and markdown
    ## Slack blocks are supported as well
    ## Here are some examples of normal text message:
    ##
    ## Alert for *%check%* was triggered at %triggerTime%.
    ## 
    ## and below is example using Slack blocks
    message: |
      {
          "color": "#FF0000",
          "blocks": [
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "Alert for check *%check%* :warning:"
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Average response time: *\n%response_time%"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Triggered at: *\n%triggerTime%"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Current response code is: *\n%response_code%"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Search type used is: *\n%search_type%"
                }
              ]
            }
          ]
      }
  # Time to wait before sending the alert after a check has failed
  # The time is in minutes and its handy parameter in case of short outages or hiccups
  waitBeforeSend: 1
  # Repeat the alert notification every (n) minutes
  repeatAfter: 1