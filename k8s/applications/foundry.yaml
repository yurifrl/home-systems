apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: foundry
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: foundry
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  sources:
    - repoURL: https://github.com/yurifrl/home-systems.git
      targetRevision: HEAD
      path: k8s/charts/support
      helm:
        valuesObject:
          virtualServices:
            - name: foundry
              service:
                name: foundry
                namespace: foundry
                port: 30000
            - name: froudry-gcsproxy
              service:
                name: gcsproxy
                namespace: foundry
                port: 8081
          externalSecrets:
            - name: foundry-secrets
          persistentVolumeClaims:
            - name: foundry-data
              volumeName: foundry-data
          persistentVolumes:
            - name: foundry-data
              path: /var/mnt/storage/foundry-data
          services:
            - name: foundry
              port: 30000
            - name: gcsproxy
              port: 8081
          statefulSets:
            - name: foundry
              image:
                repository: felddy/foundryvtt
                tag: release
              containerPort: 30000
              envFrom:
                - secretRef:
                    name: foundry-secrets
              volumes:
                - name: foundry-data
                  persistentVolumeClaim:
                    claimName: foundry-data
                - name: gcs-creds
                  secret:
                    secretName: foundry-secrets
                    items:
                      - key: foundry-sa-key.json
                        path: foundry-sa-key.json
                - name: options-config
                  configMap:
                    name: foundry-options
              volumeMounts:
                - name: foundry-data
                  mountPath: "/data"
                - name: gcs-creds
                  mountPath: "/foundry-sa-key.json"
                  subPath: foundry-sa-key.json
                  readOnly: true
              nodeSelector:
                syscd.dev/storage: tp1 
              livenessProbe:
                httpGet:
                  path: /
                  port: http
              readinessProbe:
                httpGet:
                  path: /
                  port: http
          deployments:
            #  curl -X GET http://gcsproxy:8081/<BUCKET>/legends-of-barovia-founrdyvvt/module.json
            - name: gcsproxy
              image:
                repository: ghcr.io/yurifrl/gcsproxy
                tag: latest
              containerPort: 8081
              env:
                - name: GOOGLE_APPLICATION_CREDENTIALS
                  value: /gcp/creds.json
              volumes:
                - name: foundry-sa-key
                  secret:
                    secretName: foundry-secrets
                    items:
                      - key: foundry-sa-key.json
                        path: creds.json
              volumeMounts:
                - name: foundry-sa-key
                  mountPath: /gcp
                  readOnly: true
            - name: gcsfuse
              image:
                repository: gcr.io/google.com/cloudsdktool/cloud-sdk
                tag: alpine
              command:
                - /bin/sh
                - -c
                - |
                  apk add --no-cache fuse && \
                  curl -L https://github.com/GoogleCloudPlatform/gcsfuse/releases/latest/download/gcsfuse_linux_amd64 -o /usr/local/bin/gcsfuse && \
                  chmod +x /usr/local/bin/gcsfuse && \
                  mkdir -p /mnt/gcs && \
                  gcsfuse --key-file /gcp/key.json syscd-foundry-9a54f782-ea41-4c70-9976-c8f4ab72bc31 /mnt/gcs && \
                  while true; do sleep 3600; done
              securityContext:
                privileged: true
                capabilities:
                  add:
                    - SYS_ADMIN
              volumes:
                - name: foundry-sa-key
                  secret:
                    secretName: foundry-secrets
                    items:
                      - key: foundry-sa-key.json
                        path: key.json
                - name: gcs-mount
                  emptyDir: {}
              volumeMounts:
                - name: foundry-sa-key
                  mountPath: /gcp
                  readOnly: true
                - name: gcs-mount
                  mountPath: /mnt/gcs
         