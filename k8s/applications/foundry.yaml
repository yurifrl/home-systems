apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: foundry
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: foundry
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  sources:
    - repoURL: https://github.com/yurifrl/home-systems.git
      targetRevision: HEAD
      path: k8s/charts/support
      helm:
        valuesObject:
          virtualServices:
            - name: foundry
              service:
                name: foundry
                namespace: foundry
                port: 30000
            - name: froudry-gcsproxy
              service:
                name: gcsproxy
                namespace: foundry
                port: 8080
          externalSecrets:
            - name: foundry-secrets
          persistentVolumeClaims:
            - name: foundry-data
              volumeName: foundry-data
            - name: foundry-bucket
              volumeName: foundry-bucket
          persistentVolumes:
            - name: foundry-data
              path: /var/mnt/storage/foundry-data
            - name: foundry-bucket
              path: /var/mnt/storage/foundry-bucket
          services:
            - name: foundry
              port: 30000
            - name: gcsproxy
              port: 8080
          statefulSets:
            - name: foundry
              containers:
                - name: foundry
                  image: felddy/foundryvtt:release
                  ports:
                    - name: http
                      containerPort: 30000
                  envFrom:
                    - secretRef:
                        name: foundry-secrets
                  volumeMounts:
                    - name: foundry-data
                      mountPath: "/data"
                    - name: foundry-bucket
                      mountPath: "/bucketData"
       
                - name: gcsfuse
                  image: ghcr.io/yurifrl/dockerfiles/gcsfuse:latest
                  command: ["gcsfuse"]
                  args: ["--foreground", "-o", "allow_other", "$(GCS_BUCKET)", "/bucketData"]
                  securityContext:
                    privileged: true
                    capabilities:
                      add:
                        - SYS_ADMIN
                  volumeMounts:
                    - name: foundry-bucket
                      mountPath: "/bucketData"
                    - name: gcs-creds
                      mountPath: "/foundry-sa-key.json"
                      subPath: foundry-sa-key.json
                      readOnly: true
                  env:
                    - name: GOOGLE_APPLICATION_CREDENTIALS
                      value: /foundry-sa-key.json
                    - name: GCS_BUCKET
                      valueFrom:
                        secretKeyRef:
                          name: foundry-secrets
                          key: gcs-bucket
              nodeSelector:
                syscd.dev/storage: tp1
              volumes:
                - name: foundry-data
                  persistentVolumeClaim:
                    claimName: foundry-data
                - name: foundry-bucket
                  persistentVolumeClaim:
                    claimName: foundry-bucket
                - name: gcs-creds
                  secret:
                    secretName: foundry-secrets
                    items:
                      - key: foundry-sa-key.json
                        path: foundry-sa-key.json
                - name: options-config
                  configMap:
                    name: foundry-options
          deployments:
            # http://gcsproxy:8080/legends-of-barovia-founrdyvvt/module.json
            - name: gcsproxy
              image:
                # https://github.com/yurifrl/dockerfiles
                repository: ghcr.io/yurifrl/dockerfiles/gcsproxy
                tag: latest
              containerPort: 8080
              env:
                - name: GCS_BUCKET
                  valueFrom:
                    secretKeyRef:
                      name: foundry-secrets
                      key: gcs-bucket
              volumes:
                - name: foundry-sa-key
                  secret:
                    secretName: foundry-secrets
                    items:
                      - key: foundry-sa-key.json
                        path: key.json
              volumeMounts:
                - name: foundry-sa-key
                  mountPath: /key.json
                  subPath: key.json
                  readOnly: true
         