apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true 
      - ServerSideApply=true
  sources:
    - repoURL: https://github.com/yurifrl/home-systems.git
      targetRevision: HEAD
      path: k8s/charts/support
      helm:
        valuesObject:
          virtualServices:
            - name: prometheus
              service:
                name: kube-prometheus-stack-prometheus
                namespace: monitoring
                port: 9090
            - name: alertmanager
              service:
                name: kube-prometheus-stack-alertmanager
                namespace: monitoring
                port: 9093
            - name: grafana
              service:
                name: kube-prometheus-stack-grafana
                namespace: monitoring
                port: 80

    - repoURL: https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      targetRevision: "*"
      helm:
        valuesObject:
          prometheus:
            service:
              annotations:
                teleport.dev/name: prometheus
            prometheusSpec:
              externalUrl: https://prometheus.syscd.live
              # Configure Alertmanager endpoint
              alertingEndpoints:
                - namespace: monitoring
                  name: alertmanager-operated
                  port: 9093
                  pathPrefix: /
                  apiVersion: v2
                  timeout: 10s
                
              # Enable all features
              enableFeatures:
              - "exemplar-storage"
              
              # Increase retention if needed
              retention: 30d

              # Scrape Config Selectors
              # Service Monitors
              serviceMonitorSelectorNilUsesHelmValues: false
              serviceMonitorSelector: {} 
              serviceMonitorNamespaceSelector: {}
              
              # Pod Monitors
              podMonitorSelectorNilUsesHelmValues: false
              podMonitorSelector: {}
              podMonitorNamespaceSelector: {}
              
              # Probe Monitors
              probeSelectorNilUsesHelmValues: false
              probeSelector: {}
              probeNamespaceSelector: {}
              
              # Rule Selectors
              ruleSelectorNilUsesHelmValues: false
              # Hope here is to ignore the default rules
              # ruleSelector:
              #   matchExpressions:
              #     - key: environment
              #       operator: In
              #         - production
              #         - staging
              #         - development
              ruleNamespaceSelector: {}
              
              # Scrape Config Selectors
              scrapeConfigSelectorNilUsesHelmValues: false
              scrapeConfigSelector: {}
              scrapeConfigNamespaceSelector: {}
              
              # Additional Scrape Configs
              enableAdditionalScrapeConfigs: true
              
              # Scrape configs for annotation-based discovery
              additionalScrapeConfigs:
                - job_name: 'kubernetes-pods-annotations'
                  kubernetes_sd_configs:
                    - role: pod
                  relabel_configs:
                    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                      action: keep
                      regex: true
                    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                      action: replace
                      target_label: __metrics_path__
                      regex: (.+)
                    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                      action: replace
                      regex: ([^:]+)(?::\d+)?;(\d+)
                      replacement: $1:$2
                      target_label: __address__
              resources:
                limits:
                  cpu: 750m
                  memory: 2Gi
                requests:
                  cpu: 500m
                  memory: 1Gi
          grafana:
            enabled: true
            forceDeployDashboards: true
            defaultDashboardsEnabled: true
            admin:
              existingSecret: "grafana-credentials"
              userKey: userKey
              passwordKey: passwordKey
            grafana.ini:
              auth.anonymous:
                enabled: true
                org_role: Admin
              auth:
                disable_login_form: true
                disable_signout_menu: true
            plugins:
              - grafana-mqtt-datasource
            service:
              annotations:
                teleport.dev/name: grafana
            resources:
              limits:
                cpu: 200m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 128Mi
            sidecar:
              dashboards:
                enabled: true
            datasources:
              datasources.yaml:
                apiVersion: 1
                datasources:
                  - name: Loki
                    type: loki
                    url: http://loki.monitoring:3100
                    access: proxy
                    jsonData:
                      maxLines: 1000
                  - name: MQTT
                    type: mqtt
                    url: tcp://mosquitto.mosquitto:1883
                    access: proxy
                    jsonData:
                      topic: "#"
          alertmanager:
            service:
              annotations:
                teleport.dev/name: alertmanager
            alertmanagerSpec:
              externalUrl: https://alertmanager.syscd.live

              # Namespaces to be selected for AlertmanagerConfig discovery. If nil, only
              # check own namespace.
              alertmanagerConfigNamespaceSelector: {}
              # AlertmanagerConfigs to be selected for to merge and configure Alertmanager with.
              alertmanagerConfigSelector:
                matchLabels:
                  role: alert-rules
              # AlertmanagerConfigMatcherStrategy defines how AlertmanagerConfig objects
              # process incoming alerts.
              alertmanagerConfigMatcherStrategy:
                type: OnNamespace
              # The name of the AlertmanagerConfig resource which is used to generate the
              # Alertmanager configuration.
              alertmanagerConfiguration:
                name: alertmanager-config
              resources:
                limits:
                  cpu: 100m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 128Mi

# https://stackoverflow.com/questions/76669436/alertmanager-default-receivernull-is-not-replacing-with-the-routes-specified
# https://medium.com/@phil16terpasetheo/configure-alert- manager-with-slack-notifications-on-kubernetes-cluster-helm-kube-prometheus-stack-112878c35f26
# k -n monitoring get secrets kube-prometheus-stack-grafana -ojsonpath="{.data.admin-password}" | base64 -d | pbcopy
# https://github.com/grafana/grafana/blob/main/docs/sources/setup-grafana/installation/helm/index.md