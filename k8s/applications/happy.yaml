apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: happy
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: happy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  sources:
    - repoURL: https://github.com/yurifrl/home-systems.git
      targetRevision: HEAD
      path: k8s/charts/support
      helm:
        valuesObject:
          externalSecrets:
            - name: happy-server
              decodingStrategy: Auto
          services:
            - name: happy
              port: 3005
          deployments:
            - name: happy
              replicas: 1
              initContainers:
                - name: minio-init
                  image: "minio/mc:latest"
                  command:
                    - sh
                    - -c
                    - |
                      until mc alias set local http://localhost:9000 minioadmin minioadmin; do
                        echo "Waiting for MinIO...";
                        sleep 2;
                      done;
                      mc mb -p local/happy || true;
                      mc anonymous set download local/happy;
                      echo "MinIO bucket ready";
              containers:
                - name: happy-server
                  image: "ghcr.io/yurifrl/dockerfiles/happy-server:latest"
                  imagePullPolicy: Always
                  command:
                    - sh
                    - -c
                    - |
                      echo "Waiting for PostgreSQL...";
                      until echo "SELECT 1" | npx prisma db execute --stdin 2>/dev/null; do
                        sleep 2;
                      done;
                      echo "Running migrations...";
                      npx prisma migrate deploy;
                      echo "Starting server...";
                      npm start;
                  ports:
                    - name: http
                      containerPort: 3005
                      protocol: TCP
                  env:
                    - name: NODE_ENV
                      value: "production"
                    - name: DATABASE_URL
                      value: "postgres://happy:happy@localhost:5432/happy?sslmode=disable"
                    - name: REDIS_URL
                      value: "redis://localhost:6379"
                    - name: PORT
                      value: "3005"
                    - name: S3_HOST
                      value: "localhost"
                    - name: S3_PORT
                      value: "9000"
                    - name: S3_USE_SSL
                      value: "false"
                    - name: S3_ACCESS_KEY
                      value: "minioadmin"
                    - name: S3_SECRET_KEY
                      value: "minioadmin"
                    - name: S3_BUCKET
                      value: "happy"
                    - name: S3_PUBLIC_URL
                      value: "http://localhost:9000/happy"
                  envFrom:
                    - secretRef:
                        name: happy-server
                  resources:
                    limits:
                      cpu: 300m
                      memory: 384Mi
                    requests:
                      cpu: 100m
                      memory: 128Mi
                - name: postgres
                  image: "postgres:16-alpine"
                  imagePullPolicy: IfNotPresent
                  env:
                    - name: POSTGRES_DB
                      value: "happy"
                    - name: POSTGRES_USER
                      value: "happy"
                    - name: POSTGRES_PASSWORD
                      value: "happy"
                    - name: PGDATA
                      value: "/var/lib/postgresql/data/pgdata"
                  ports:
                    - name: postgres
                      containerPort: 5432
                      protocol: TCP
                  resources:
                    limits:
                      cpu: 300m
                      memory: 384Mi
                    requests:
                      cpu: 100m
                      memory: 128Mi
                - name: redis
                  image: "redis:7-alpine"
                  imagePullPolicy: IfNotPresent
                  ports:
                    - name: redis
                      containerPort: 6379
                      protocol: TCP
                  resources:
                    limits:
                      cpu: 100m
                      memory: 128Mi
                    requests:
                      cpu: 50m
                      memory: 64Mi
                - name: minio
                  image: "minio/minio:latest"
                  imagePullPolicy: IfNotPresent
                  command:
                    - minio
                    - server
                    - /data
                    - --console-address
                    - ":9001"
                  env:
                    - name: MINIO_ROOT_USER
                      value: "minioadmin"
                    - name: MINIO_ROOT_PASSWORD
                      value: "minioadmin"
                  ports:
                    - name: minio
                      containerPort: 9000
                      protocol: TCP
                    - name: console
                      containerPort: 9001
                      protocol: TCP
                  resources:
                    limits:
                      cpu: 200m
                      memory: 256Mi
                    requests:
                      cpu: 100m
                      memory: 128Mi
          virtualServices:
            - name: happy
              service:
                name: happy
                namespace: happy
                port: 3005
