apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: n8n
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: n8n
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  sources:
    # Add virtual service configuration
    - repoURL: https://github.com/yurifrl/home-systems.git
      targetRevision: HEAD
      path: k8s/charts/support
      helm:
        valuesObject:
          virtualServices:
            - name: n8n
              service:
                name: n8n
                namespace: n8n
                port: 80
          
          # # Optional: Add persistent volume claim for n8n data
          # persistentVolumeClaims:
          #   - name: n8n-data
          #     storage: 10Gi
          #     storageClassName: local-path
          #     accessModes:
          #       - ReadWriteOnce

    # n8n Helm chart installation using OCI repository
    - repoURL: 8gears.container-registry.com/library
      chart: n8n
      targetRevision: "*"
      helm:
        valuesObject:
          # Global settings
          main:
            # Configure resources
            resources:
              requests:
                cpu: 200m
                memory: 256Mi
              limits:
                cpu: 1000m
                memory: 1Gi
            
            # Service configuration
            service:
              type: ClusterIP
              port: 80
            
            # Persistence configuration
            persistence:
              enabled: false
              # existingClaim: n8n-data
            
            # Security context
            podSecurityContext:
              runAsNonRoot: true
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
            
            # n8n configuration via environment variables
            env:
              N8N_PORT: "5678"
              N8N_PROTOCOL: "http"
              N8N_HOST: "n8n.syscd.tech"
              N8N_ENCRYPTION_KEY: "replace-with-your-own-key"
              # Uncomment for PostgreSQL database connection
              # N8N_DB_TYPE: "postgresdb"
              # N8N_DB_POSTGRESDB_HOST: "postgres"
              # N8N_DB_POSTGRESDB_PORT: "5432"
              # N8N_DB_POSTGRESDB_DATABASE: "n8n"
              # N8N_DB_POSTGRESDB_USER: "n8n"
              # N8N_DB_POSTGRESDB_PASSWORD: "n8n-password"
              
              # Enable webhooks
              N8N_WEBHOOK_URL: "https://n8n.syscd.tech/"
              
              # Enable SSL
              # N8N_WEBHOOK_TUNNEL_URL: "https://n8n.syscd.tech/"
              
              # Set timezone
              TZ: "UTC"
              
            # Deployment strategy
            deploymentStrategy:
              type: "Recreate"
            
            # Number of replicas (for non-scaling deployment)
            replicaCount: 1
            
            # Probes for healthchecks
            livenessProbe:
              httpGet:
                path: /healthz
                port: http
              initialDelaySeconds: 30
              periodSeconds: 10
            
            readinessProbe:
              httpGet:
                path: /healthz
                port: http
              initialDelaySeconds: 30
              periodSeconds: 10
          
          # Advanced scaling options
          scaling:
            enabled: false
            # Redis configuration for queue mode (required for scaling)
            # redis:
            #   enabled: true
            #   password: "your-redis-password"
            
            # Worker configuration
            # worker:
            #   count: 2
            #   resources:
            #     requests:
            #       cpu: 200m
            #       memory: 256Mi
            #     limits:
            #       cpu: 1000m
            #       memory: 1Gi
            
            # Webhook configuration (for dedicated webhook instances)
            # webhook:
            #   enabled: false
            #   replicaCount: 1
          
          # Service annotations
          service:
            annotations:
              teleport.dev/name: n8n 