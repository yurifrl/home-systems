apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: n8n
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: n8n
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  sources:
    - repoURL: registry-1.docker.io
      chart: bitnamicharts/redis
      targetRevision: "*"
      helm:
        valuesObject:
          architecture: standalone
          auth:
            enabled: false
          master:
            persistence:
              enabled: false
            resources:
              requests:
                memory: 256Mi
                cpu: 100m
              limits:
                memory: 456Mi
                cpu: 200m
          replica:
            replicaCount: 0
          sentinel:
            enabled: false
    - repoURL: registry-1.docker.io
      chart: bitnamicharts/postgresql
      targetRevision: "*"
      helm:
        valuesObject:
          auth:
            username: n8n
            database: n8n
          primary:
            persistence:
              enabled: false
            resources:
              requests:
                memory: 256Mi
                cpu: 100m
                limits:
                  memory: 512Mi
                  cpu: 200m
    # Add virtual service configuration
    - repoURL: https://github.com/yurifrl/home-systems.git
      targetRevision: HEAD
      path: k8s/charts/support
      helm:
        valuesObject:
          virtualServices:
            - name: n8n
              service:
                name: n8n
                namespace: n8n
                port: 80
            - name: n8n
              service:
                name: n8n-webhook
                namespace: n8n
                port: 80                
          externalSecrets:
            - name: n8n
    - repoURL: 8gears.container-registry.com/library
      chart: n8n
      targetRevision: "*"
      helm:
        valuesObject:
          main:
            config:
              n8n:
                editor_base_url: https://n8n.syscd.live
              executions_mode: queue
              db:
                type: postgresdb
                postgresdb:
                  host: n8n-postgresql
                  port: 5432
                  database: n8n
                  user: n8n
              webhook_url: n8n.syscd.live
              queue:
                health:
                  check:
                    active: true
                bull:
                  redis:
                    host: n8n-redis-master
                    port: 6379
            extraEnv: &extraEnv
              N8N_LOG_LEVEL:
                value: debug
              N8N_RUNNERS_ENABLED:
                value: "true"
              DB_POSTGRESDB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: n8n
                    key: DB_POSTGRESDB_PASSWORD
              N8N_ENCRYPTION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: n8n
                    key: N8N_ENCRYPTION_KEY                     
            resources:
              limits:
                memory: 2048Mi
              requests:
                memory: 512Mi

          worker:
            enabled: true
            extraEnv: *extraEnv # using YAML magic (anchors) to reference main extraEnv

          webhook:
            enabled: true
            count: 1
            extraEnv: *extraEnv # using YAML magic (anchors) to reference main extraEnv

          valkey:
            enabled: true
            architecture: standalone
            sentinel:
              enabled: false
            auth:
              enabled: false
            primary:
              kind: Deployment
              persistence:
                enabled: false
              resources:
                requests:
                  memory: 256Mi
                  cpu: 100m