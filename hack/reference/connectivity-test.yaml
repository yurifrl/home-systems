apiVersion: v1
kind: ServiceAccount
metadata:
  name: connectivity-test
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: connectivity-test
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: connectivity-test
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: connectivity-test
  namespace: kube-system
roleRef:
  kind: Role
  name: connectivity-test
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: connectivity-test
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: connectivity-test
  template:
    metadata:
      labels:
        app: connectivity-test
    spec:
      serviceAccountName: connectivity-test
      terminationGracePeriodSeconds: 0
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
        operator: Exists
      containers:
      - name: connectivity-test
        image: nicolaka/netshoot:latest
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
        - /bin/sh
        - -c
        - |
          while true; do
            echo "=== Connectivity Test 2 [Node: $NODE_NAME | Pod: $POD_NAME] ==="
            
            # Get service account token and CA cert
            TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
            CACERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            
            # Test API server connectivity
            api_test=$(curl -k -v -H "Authorization: Bearer $TOKEN" \
                      --cacert $CACERT \
                      --max-time 5 \
                      https://kubernetes.default.svc/api/v1/namespaces/kube-system/pods 2>&1)
            
            if echo "$api_test" | grep -q "200 OK"; then
              echo "✅ API Server test passed"
              sleep 10
            else
              echo "❌ FAIL: API Server connectivity issues"
              echo "Details:"
              echo "$api_test" | grep -E "HTTP|failed|refused|unreachable"
            fi
          done